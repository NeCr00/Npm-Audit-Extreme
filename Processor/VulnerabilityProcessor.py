from Log import Log
from Processor.VulnerabilityRange import VulnerabilityRange


class VulnerabilityProcessor:
    def __init__(self, vulnerable_packages: list[dict], all_packages: list[dict]):
        # constructor which takes two parameters, vulnerable_packages and all_packages
        self.vulnerable_packages = vulnerable_packages
        self.all_packages = all_packages
        self.check_vulnerable_versions()

    def check_vulnerable_versions(self):
        # loop through each vulnerable package
        for vuln_package in self.vulnerable_packages:
            # get the package name and vulnerable versions
            vul_package_name = vuln_package['package_name']
            vuln_versions = vuln_package['vul_version']
            # loop through each package in the all_packages list
            for package_name, package_info in self.all_packages.items():
                if package_name == vul_package_name:
                    # loop through each version of the package
                    for version in package_info['versions']:
                        # print(version)
                        # check if the version is vulnerable
                        vuln_package['vuln_version_found'] = []
                        vuln_package['not_vulnerable_versions'] = []
                        if VulnerabilityRange.is_vulnerable(version, vuln_versions, None):
                            # add the version to the vulnerable package's vuln_version_found list
                            vuln_package['vuln_version_found'].append(version)
                        else:

                            vuln_package['not_vulnerable_versions'].append(version)
